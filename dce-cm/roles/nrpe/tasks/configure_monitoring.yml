---
- name: add hostgroup
  become: yes
  template: "src=hostgroup.cfg dest=/usr/local/nagios/etc/hostgroups/{{ nagios_hostgroup_name}}.cfg owner=nagios group=nagios backup=no"
  delegate_to: panopticon.curationexperts.com

- name: add host
  become: yes
  template: "src=host.cfg dest=/usr/local/nagios/etc/hosts/{{ hostname }}.cfg owner=nagios group=nagios backup=no"
  delegate_to: panopticon.curationexperts.com
  when: hostname != "panopticon"

- name: ensure nrpe event handler exists
  become: yes
  copy: src=nrpe_event_handler dest=/usr/local/nagios/libexec/event_handlers/nrpe_event_handler
      owner=nagios
      group=nagios
      mode=0755
  delegate_to: panopticon.curationexperts.com

- name: add common services
  become: yes
  template: "src=common_services.cfg dest=/usr/local/nagios/etc/services/{{ hostname }}_common_services.cfg owner=nagios group=nagios backup=no"
  delegate_to: panopticon.curationexperts.com

- name: add services
  become: yes
  template: "src={{ item }}.cfg dest=/usr/local/nagios/etc/services/{{ hostname }}_{{ item }}.cfg owner=nagios group=nagios backup=no"
  with_items: "{{ nagios_services }}"
  delegate_to: panopticon.curationexperts.com

- name: check nagios config
  become: yes
  shell: /etc/init.d/nagios checkconfig | grep OK
  register: nagios_config_check
  delegate_to: panopticon.curationexperts.com

- name: check nagios config
  assert:
    that:
      - "'OK' in nagios_config_check.stdout"

- name: stop nagios
  become: yes
  shell: systemctl stop nagios.service
  delegate_to: panopticon.curationexperts.com

- name: really stop nagios
  become: yes
  shell: pkill nagios
  delegate_to: panopticon.curationexperts.com

- name: (re)start nagios
  become: yes
  shell: systemctl restart nagios.service
  delegate_to: panopticon.curationexperts.com
